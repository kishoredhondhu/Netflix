import { Component, OnDestroy } from &#39;@angular/core&#39;;
import { Router } // Router is needed for navigation, not directly for project creation here
from &#39;@angular/router&#39;;
import { Subscription } from &#39;rxjs&#39;;

// Models - Assuming these are correctly defined in your models folder
import { MovieProjectResponse } from './models/project.model'; // For the event payload

// Components - Needed for instanceof check in onActivate
import { ProjectFormComponent } from './project-form/project-form.component'; // Path to your ProjectFormComponent

@Component({
selector: 'app-root',
templateUrl: './app.component.html',
styleUrls: ['./app.component.css'] // Assuming you have this file or remove if not
})
export class AppComponent implements OnDestroy {
title = 'Movie Production Management System'; // Consistent title

// Properties for global messages and navbar link state
submissionMessage: string | null = null;
isError: boolean = false;
lastCreatedProjectId: number | null = null;

private projectSuccessfullyCreatedSub: Subscription | undefined;
// If ProjectFormComponent also emitted an error event AppComponent should listen to:
// private projectCreationErrorSub: Subscription | undefined;

constructor(
private router: Router // Router can be used for programmatic navigation if needed elsewhere
) {
console.log('AppComponent: constructor called.');
}

/\*\*

  * This method is called by the &lt;router-outlet&gt;'s (activate) event.
  * It allows AppComponent to interact with the currently routed component.
    \*/
    onActivate(activatedComponentRef: any): void {
    console.log('AppComponent: Router outlet activated with component:', activatedComponentRef.constructor.name);

<!-- end list -->